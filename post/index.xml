<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on My New Hugo Site</title>
    <link>https://miracy.github.io/post/</link>
    <description>Recent content in Posts on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 04 Jul 2020 16:22:52 +0800</lastBuildDate>
    
	<atom:link href="https://miracy.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>组合测试</title>
      <link>https://miracy.github.io/post/blog/</link>
      <pubDate>Sat, 04 Jul 2020 16:22:52 +0800</pubDate>
      
      <guid>https://miracy.github.io/post/blog/</guid>
      <description>组合测试的概论 组合测试旨在从待测软件面临的庞大的组合空间中，选取少量的测试用例，高效、科学、系统地检测软件系统中各种因素及其相互作用可能促发的故障。
一般情况下，软件系统的某些输入参数、软硬件配置、内外部事件等因素及其相互作用都可能促发软件故障。针对这类软件故障普遍存在的情况，必须设计相应的测试用例对各种因素及其相互作用进行系统的覆盖性检测。但这种测试用例的设计和生成存在以下问题：
 由于影响软件的因素多，且各个因素的取值情况复杂，因此，所有可能的因素组合情况形成了一个数量巨大的测试用例空间，穷尽测试已不可能； 手工设计和选择测试用例难度大，容易出错。  组合测试的测试用例生成 组合测试的优化与约简 组合测试的故障定位 自适应的组合测试 组合测试的应用 组合测试的比较研究及工具 组合测试的研究现状与未来 </description>
    </item>
    
  </channel>
</rss>